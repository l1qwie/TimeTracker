// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/client": {
            "get": {
                "description": "Returned the information about all clients",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get Clients Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Surname",
                        "name": "surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Patronymic",
                        "name": "patronymic",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Age",
                        "name": "age",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apptype.Client"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/servers.Error"
                        }
                    }
                }
            }
        },
        "/client/change": {
            "put": {
                "description": "Изменение данных клиента в базе данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Изменение данных клиента",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ClientId",
                        "name": "clientid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Column",
                        "name": "column",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ValueInt",
                        "name": "valueint",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ValueStr",
                        "name": "valuestr",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/servers.Error"
                        }
                    }
                }
            }
        },
        "/client/new": {
            "post": {
                "description": "Добавление нового клиента в базу данных",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Добавление клиента",
                "parameters": [
                    {
                        "type": "string",
                        "description": "passport",
                        "name": "passport",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/apptype.People"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/servers.Error"
                        }
                    }
                }
            }
        },
        "/client/tasks/timeManager": {
            "post": {
                "description": "Начало отсчета времени для задачи клиента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Начало отсчета времени",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ClientId",
                        "name": "clientid",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TaskId",
                        "name": "taskid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/servers.Error"
                        }
                    }
                }
            }
        },
        "/client/{id}/delete": {
            "delete": {
                "description": "Полное удаление задач клиента и самого клиента",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Удаление клиента из базы данных",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "clientid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/servers.Error"
                        }
                    }
                }
            }
        },
        "/client/{id}/time-logs": {
            "get": {
                "description": "Возвращает трудозатраты по пользователю за период",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Трудозатраты клиентов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/apptype.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/servers.Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apptype.Client": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passport_number": {
                    "type": "string"
                },
                "passport_series": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "apptype.People": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "apptype.Task": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "time_spent": {
                    "type": "string"
                }
            }
        },
        "servers.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
